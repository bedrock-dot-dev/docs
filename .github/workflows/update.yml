name: Check for docs updates

on:
  workflow_dispatch: {}
  repository_dispatch:
    types: [docs-update]
  schedule:
    # run this during the week, tuesday to friday
    # at 9:10am, 9:10pm
    # Redmond time (UTC-7)
    - cron: '10 16,4 * * 2-5'

jobs:
  check:
    if: github.repository == 'bedrock-dot-dev/docs' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Setup git environment
        run: |
          git config --global user.name 'destruc7i0n'
          git config --global user.email 'destruc7i0n@users.noreply.github.com'

      - name: Check for bedrock docs update
        id: check
        run: |
          cd scripts
          python3 update.py

      - name: Update summary
        run: |
          echo "### Check output 🗒️" >> $GITHUB_STEP_SUMMARY
          echo "Update found: ${{ (steps.check.outputs.update == 'true' && '✅') || '❌' }}" >> $GITHUB_STEP_SUMMARY
          echo 'JSON output: `${{ steps.check.outputs.release_data }}`' >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.check.outputs.update }}" == "true" ]; then
            echo 'Commit message: ${{ steps.check.outputs.msg }}' >> $GITHUB_STEP_SUMMARY
          fi

      - name: Send Discord message
        if: steps.check.outputs.update == 'true'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          jq -nr '{
            "content": null,
            "embeds": [
              {
                "title": "Docs update: **${{ steps.check.outputs.msg }}**",
              }
            ],
            "username": "bedrock.dev",
            "avatar_url": "https://bedrock.dev/favicon/android-chrome-512x512.png",
          }' | curl -X POST -H "Content-Type: application/json" -d @- $DISCORD_WEBHOOK

      - name: Store cached zip files
        if: steps.check.outputs.update == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: docs-zip
          path: scripts/cache

      - name: Archive documentation files
        if: steps.check.outputs.update == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.check.outputs.msg }}
          path: scripts/tmp
      
      - name: Deploy site
        if: steps.check.outputs.update == 'true'
        env:
          VERCEL_DEPLOY_HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK }}
        run: |
          # sleep for a bit for GitHub's cache
          sleep 10s
          curl -X POST $VERCEL_DEPLOY_HOOK
